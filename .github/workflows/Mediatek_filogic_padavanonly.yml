name: Mediatek_filogic_padavanonly

on:
  workflow_dispatch:
    inputs: 
      LAN_IP:
        description: 'Set LAN IP Address'
        required: true
        default: '10.0.0.1'   
      DEVICE:
        description: 'Select the build device'
        required: true
        default: 'CETRON_CT3003'
        type: choice
        options:
          - 'ABT_ASR3000'
          - 'CETRON_CT3003'
          - 'CMCC_A10'
          - 'CMCC_RAX3000M_eMMC'
          - 'CMCC_RAX3000M_NAND'
          - 'GL_iNet_GL_MT3000'
          - 'H3C_NX30PRO'
          - 'Imou_LC_HX3001'
          - 'JCG_Q30'
          - 'KONKA_KOMI_A31'
          - 'Livinet_ZR_3020'
          - 'MediaTek_360_T7'
          - 'MediaTek_360_T7_108M_ubi'
          - 'MediaTek_CLT_R30B1'
          - 'MediaTek_CLT_R30B1_112M_ubi'
          - 'Xiaomi_Mi_Router_AX3000T'
          - 'Xiaomi Mi Router AX3000T (stock layout)'
          - 'Xiaomi Mi Router WR30U (stock layout)'
          - 'Xiaomi Mi Router WR30U (112M UBI layout)'
          - 'Xiaomi Mi Router WR30U (stock layout)'
          - 'GL.iNet GL-MT6000 '
          - 'TP-Link TL-XDR6086'
          - 'TP-Link TL-XDR6088'
          - 'Xiaomi Redmi Router AX6000'
          - 'Xiaomi Redmi Router AX6000'
      WIFI_DRIVER:
        description: 'Choose WiFi Driver'
        required: true
        default: 'v7.6.7.2-fw-20240823(recommend)'
        type: choice
        options:
        - v7.6.7.2-fw-20240823(recommend)
        - v7.6.6.1-fw-20230808(recommend)
        - v7.6.7.2-fw-default
        - v7.6.7.2-fw-20221208
        - v7.6.7.2-fw-20230421
        - v7.6.7.2-fw-20230808
        - v7.6.7.2-fw-20231024
        - v7.6.6.1-fw-default
        - v7.6.6.1-fw-20221208
        - v7.6.6.1-fw-20230421
        - v7.6.6.1-fw-20231024
        - v7.6.6.1-fw-20240823

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x-24.10
  REPO_BRANCH: 2410
  CONFIG_FILE: configs/Mediatek/${{ github.event.inputs.DEVICE }}.config
  DIY_SCRIPT: diy/diy-Mediatek.sh
  UPLOAD_BIN_DIR: false
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: Mediatek_filogic
  TZ: Asia/Shanghai
  
jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check Server Performance
      run: |
        echo "Ë≠¶Âëä‚ö†"
        echo "ÂàÜÈÖçÁöÑÊúçÂä°Âô®ÊÄßËÉΩÊúâÈôêÔºåËã•ÈÄâÊã©ÁöÑÊèí‰ª∂ËøáÂ§öÔºåÂä°ÂøÖÊ≥®ÊÑèCPUÊÄßËÉΩÔºÅ"
        echo -e "Â∑≤Áü•CPUÂûãÂè∑(ÈôçÂ∫è): 7763Ôºå8370CÔºå8272CLÔºå8171MÔºåE5-2673\n"
        echo "--------------------------CPU‰ø°ÊÅØ--------------------------"
        echo "CPUÁâ©ÁêÜÊï∞Èáè: $(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo "CPUÊ†∏ÂøÉÊï∞Èáè: $(nproc)"
        echo -e "CPUÂûãÂè∑‰ø°ÊÅØ:$(cat /proc/cpuinfo | grep -m1 name | awk -F: '{print $2}')\n"
        echo "--------------------------ÂÜÖÂ≠ò‰ø°ÊÅØ--------------------------"
        echo "Â∑≤ÂÆâË£ÖÂÜÖÂ≠òËØ¶ÁªÜ‰ø°ÊÅØ:"
        echo -e "$(sudo lshw -short -C memory | grep GiB)\n"
        echo "--------------------------Á°¨Áõò‰ø°ÊÅØ--------------------------"
        echo "Á°¨ÁõòÊï∞Èáè: $(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install $(curl -fsSL https://git.kejizero.online/zhao/files/raw/branch/main/Rely/ubuntu2204)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Clone Source Code
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        COMMIT_AUTHOR=$(git show -s --date=short --format="‰ΩúËÄÖ: %an")
        echo "COMMIT_AUTHOR=$COMMIT_AUTHOR" >> $GITHUB_ENV
        COMMIT_DATE=$(git show -s --date=short --format="Êó∂Èó¥: %ci")
        echo "COMMIT_DATE=$COMMIT_DATE" >> $GITHUB_ENV
        COMMIT_MESSAGE=$(git show -s --date=short --format="ÂÜÖÂÆπ: %s")
        echo "COMMIT_MESSAGE=$COMMIT_MESSAGE" >> $GITHUB_ENV
        COMMIT_HASH=$(git show -s --date=short --format="hash: %H")
        echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

    - name: Generate Variables
      run: |
        cp $CONFIG_FILE $OPENWRT_PATH/.config
        cd $OPENWRT_PATH
        make defconfig > /dev/null 2>&1
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV
        DEVICE_TARGET=$(cat .config | grep CONFIG_TARGET_BOARD | awk -F '"' '{print $2}')
        echo "DEVICE_TARGET=$DEVICE_TARGET" >> $GITHUB_ENV
        DEVICE_SUBTARGET=$(cat .config | grep CONFIG_TARGET_SUBTARGET | awk -F '"' '{print $2}')
        echo "DEVICE_SUBTARGET=$DEVICE_SUBTARGET" >> $GITHUB_ENV

    - name: Cache Toolchain
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: false
        mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
        prefix: ${{ env.OPENWRT_PATH }}

    - name: Install Feeds
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $GITHUB_WORKSPACE/scripts/*.sh
        chmod +x $DIY_SCRIPT
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_SCRIPT

    - name: Set the LAN IP address (router login address)
      run: |
        cd openwrt
        SET_IP=${{ github.event.inputs.LAN_IP }}
        if [[ $SET_IP =~ ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
            #‰øÆÊîπimmortalwrt.lanÂÖ≥ËÅîIP
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" $(find feeds/luci/modules/luci-mod-system -type f -name "flash.js")
            #‰øÆÊîπÈªòËÆ§IPÂú∞ÂùÄ
            sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
            echo "Set LAN IP Address: $SET_IP"
        else
            echo "Invalid IP address, use default."
        fi

    - name: Set WiFi driver version
      run: |
        cd openwrt
        wifi_driver=$(echo "${{ github.event.inputs.WIFI_DRIVER }}" | sed -E 's/^(v[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+).*/\1/')
        firmware=$(echo "${{ github.event.inputs.WIFI_DRIVER }}" | sed -E 's/.*fw-([0-9]{8}|default).*/\1/g')
        if [ "$wifi_driver" == "v7.6.6.1" ]; then
                sed -i 's/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7672=y/CONFIG_MTK_MT_WIFI_DRIVER_VERSION_7661=y/g' .config
        fi
        if [ "$firmware" == "default" ]; then
                sed -i 's/CONFIG_MTK_MT_WIFI_MT7986_20240823=y/CONFIG_MTK_MT_WIFI_MT7986_DEFAULT_FIRMWARE=y/g' .config
        else
        	sed -i 's/CONFIG_MTK_MT_WIFI_MT7986_20240823=y/CONFIG_MTK_MT_WIFI_MT7986_${firmware}=y/g' .config
        fi
        echo "Use WiFi Driver: $wifi_driver-fw-$firmware"  

    - name: Download DL Package
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Compile Firmware
      id: compile
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d")" >> $GITHUB_ENV

    - name: Check Space Usage
      if: (!cancelled())
      run: df -hT

    - name: Upload Bin Directory
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.SOURCE_REPO }}-bin-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
        path: ${{ env.OPENWRT_PATH }}/bin

    - name: Organize Files
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        cat sha256sums
        cp $OPENWRT_PATH/.config build.config
        mv -f $OPENWRT_PATH/bin/packages/*/*/*.ipk packages
        tar -zcf Packages.tar.gz packages
        rm -rf packages feeds.buildinfo version.buildinfo
        echo "KERNEL=$(cat *.manifest | grep ^kernel | cut -d- -f2 | tr -d ' ')" >> $GITHUB_ENV
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: Upload Firmware To Artifact
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE != 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.SOURCE_REPO }}-firmware-${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}-${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: Upload Firmware To Release
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.FIRMWARE_TAG }}
        allowUpdates: true
        tag: ${{ env.FIRMWARE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          **This is OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          ### üìí Âõ∫‰ª∂‰ø°ÊÅØ
          - üíª Âπ≥Âè∞Êû∂ÊûÑ: ${{ env.DEVICE_TARGET }}-${{ env.DEVICE_SUBTARGET }}
          - ‚öΩ Âõ∫‰ª∂Ê∫êÁ†Å: ${{ env.REPO_URL }}
          - üíù Ê∫êÁ†ÅÂàÜÊîØ: ${{ env.REPO_BRANCH }}
          - üöÄ ÂÜÖÊ†∏ÁâàÊú¨: ${{ env.KERNEL }}
          - üåê ÈªòËÆ§Âú∞ÂùÄ: ${{ github.event.inputs.LAN_IP }}
          - üîë ÈªòËÆ§ÂØÜÁ†Å: password
          ### üßä Âõ∫‰ª∂ÁâàÊú¨
          - Âõ∫‰ª∂ÁºñËØëÂâçÊúÄÂêé‰∏ÄÊ¨°‚û¶[‰∏ªÊ∫êÁ†Å](${{ env.REPO_URL }})Êõ¥Êñ∞ËÆ∞ÂΩï
          - ${{ env.COMMIT_AUTHOR }}
          - ${{ env.COMMIT_DATE }}
          - ${{ env.COMMIT_MESSAGE }}
          - ${{ env.COMMIT_HASH }}
