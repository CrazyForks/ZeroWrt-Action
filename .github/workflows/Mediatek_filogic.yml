name: Mediatek_filogic

on:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "Select the source branch"
        required: false
        default: "hanwckf_mt798x_v21.02"
        type: choice
        options:
          - hanwckf_mt798x_v21.02
          - padavanonly_mt798x_v24.10 
      LAN_IP:
        description: 'Set LAN IP Address'
        required: true
        default: '10.0.0.1'   
      device:
        description: 'Select the build device'
        required: true
        default: 'cetron_ct3003'
        type: choice
        options:
          - 'abt_asr3000'
          - 'cetron_ct3003'
          - 'cmcc_a10'
          - 'cmcc_rax3000m_emmc'
          - 'cmcc_rax3000m_nand'
          - 'gl_inet_gl_mt3000'
          - 'h3c_nx30pro'
          - 'imou_lc_hx3001'
          - 'jcg_q30'
          - 'konka_komi_a31'
          - 'livinet_zr_3020'
          - 'mediatek_360_t7'
          - 'mediatek_360_t7_108m_ubi'
          - 'mediatek_clt_r30b1'
          - 'mediatek_clt_r30b1_112m_ubi'
          - 'xiaomi_mi_router_ax3000t'
          - 'xiaomi_mi_router_ax3000t_stock_layout'
          - 'xiaomi_mi_router_wr30u_stock_layout'
          - 'xiaomi_mi_router_wr30u_112m_ubi_layout'
          - 'xiaomi_mi_router_wr30u_stock_layout'
          - 'gl_inet_gl_mt6000'
          - 'tp_link_tl_xdr6086'
          - 'tp_link_tl_xdr6088'
          - 'xiaomi_redmi_router_ax6000'
          - 'xiaomi_redmi_router_ax6000_stock_layout'
          
env:
  FEEDS_CONF: Mediatek/${{ inputs.source_branch }}/feeds.conf.default
  CONFIG_FILE: Mediatek/${{ inputs.source_branch }}/${{ inputs.device }}.config
  DIY_P1_SH: Mediatek/${{ inputs.source_branch }}/diy-part1.sh
  DIY_P2_SH: Mediatek/${{ inputs.source_branch }}/diy-part2.sh
  TZ: America/New_York
  
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) 2>/dev/null
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo swapoff -a
          sudo rm -f /swapfile /mnt/swapfile
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://tinyurl.com/ubuntu2204-make-openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo sed -i '/NVM_DIR/d;/skel/d' /root/{.bashrc,.profile}
          sudo rm -rf ~/{.cargo,.dotnet,.rustup}
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Create simulated physical disk
        run: |
          mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
          root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
          sudo truncate -s "${mnt_size}"G /mnt/mnt.img
          sudo truncate -s "${root_size}"G /root.img
          sudo losetup /dev/loop6 /mnt/mnt.img
          sudo losetup /dev/loop7 /root.img
          sudo pvcreate /dev/loop6
          sudo pvcreate /dev/loop7
          sudo vgcreate github /dev/loop6 /dev/loop7
          sudo lvcreate -n runner -l 100%FREE github
          sudo mkfs.xfs /dev/github/runner
          sudo mkdir -p /builder
          sudo mount /dev/github/runner /builder
          sudo chown -R runner.runner /builder
          df -Th

      - name: Clone Source Code
        run: |
          df -hT $GITHUB_WORKSPACE
          if [[ "${{ inputs.source_branch }}" == *"hanwckf_mt798x_v21.02"* ]]; then
              REPO_URL="https://github.com/hanwckf/immortalwrt-mt798x"
              REPO_BRANCH="openwrt-21.02"
          elif [[ "${{ inputs.source_branch }}" == *"padavanonly_mt798x_v24.10"* ]]; then
              REPO_URL="https://github.com/padavanonly/immortalwrt-mt798x-24.10"
              REPO_BRANCH="2410" 
          else
              echo "Unknown source code repository."
              exit 1
          fi           
          git clone $REPO_URL -b $REPO_BRANCH openwrt
          ln -sf /builder/openwrt ${GITHUB_WORKSPACE}/openwrt
          ln -sf /builder/openwrt /home/runner/work/_actions/oppen321/ZeroWrt-Action/master/openwrt

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${DIY_P1_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P1_SH}
    
      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${DIY_P2_SH}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${DIY_P2_SH}

      - name: Set the LAN IP address (router login address)
        run: |
          cd openwrt
          SET_IP=${{ github.event.inputs.LAN_IP }}
          if [[ $SET_IP =~ ^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$ ]]; then
              #修改immortalwrt.lan关联IP
              sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" $(find feeds/luci/modules/luci-mod-system -type f -name "flash.js")
              #修改默认IP地址
              sed -i "s/192\.168\.[0-9]*\.[0-9]*/$SET_IP/g" package/base-files/files/bin/config_generate
              echo "Set LAN IP Address: $SET_IP"
          else
              echo "Invalid IP address, use default."
          fi
          
      - name: Download package
        id: package
        run: |
          cd openwrt/
          make defconfig
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the OpenWrt
        id: compile
        run: |
          cd openwrt/
          echo -e "$(nproc) thread compile"
          make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Prepare Firmware Files
        id: Files
        run: |
          cd openwrt/
          [[ -d "output" ]] || mkdir output
          [[ -d "info" ]] || mkdir info
          if [[ "${{ github.event.inputs.DEVICE }}" == "gl_inet_gl_mt3000" ]]; then
            cp -a openwrt/bin/targets/mediatek/*/*.tar output/
          else    
            cp -a openwrt/bin/targets/mediatek/*/*.bin output/
          fi
          cp -a openwrt/bin/targets/mediatek/*/config.buildinfo info/config.buildinfo

      - name: Create release
        continue-on-error: true
        uses: ncipollo/release-action@v1
        with:
          name: ${{ inputs.source_branch }}
          allowUpdates: true
          tag: ${{ inputs.source_branch }}
          commit: master
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: /builder/openwrt/rom/*
